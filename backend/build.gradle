plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}
group = 'com.shinhan'
version = '0.0.1-SNAPSHOT'
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: '3.4.2'

    implementation 'com.squareup.okhttp3:okhttp:4.12.0' // GPT API 요청 관련
    implementation 'org.modelmapper:modelmapper:3.1.1'

    // QueryDSL 관련 설정 (jakarta 지원)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.0'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
tasks.named('test') {
    useJUnitPlatform()
}

// ✅ QueryDSL 소스 생성 경로 추가
def generated = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main")

sourceSets {
    main {
        java {
            srcDirs += generated
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = generated.get().asFile
}
